# -*- text -*-
##
## osp.conf -- Configuration for OSP running parameters
##
## $Id$

#
# Introduction
# ====================================================================
# The FreeRADIUS OSP module maps RADIUS accounting records to OSP
# UsageIndication elements.  The OSP module then uses OSP Toolkit to
# forward those UsageIndication elements as OSP call detail records
# (OSP CDRs) or OSP UsageIndication messages to an OSP server.
# Multiple OSP servers can be configured for redundancy.
#
# One OSP module instance can only map one type of RADIUS records to
# OSP.  For example, an OSP module instance can map Acme Packet
# RADIUS records to OSP or map NexTone (GenBand) RADIUS records to
# OSP, but not both at the same time.
#
# If different types of RADIUS records need to be collected, then a
# different OSP module instance will need to be deployed for each
# type of RADIUS record that will be collected.
#
# In addition to this configuration file the clients.conf file must
# also be edited.  The IP addresses of the client machines that are
# the source of the RADIUS records and the RADIUS secret must be
# configured in the client.conf file.
#

#
# OSP Module Configuration
#
osp {
    #
    # OSP module running parameters
    #

    # This is the default running configuration section. Please do
    # not touch it!!!
    default_running {
        loglevel = 1                    # 0 - short, 1 - long */
    }

    # This is the used running configuration section.
    running used {
    }

    #
    # OSP provider parameters
    #

    # This is the default provider configuration section. Please do
    # not touch it!!!
    default_provider {
        accelerate = no
        security = no
        spuri1 = http://osptestserver.transnexus.com:1080/osp
        # spuri1 = https://[1.2.3.4]:1443/osp
        spweight1 = 1000
        spweight2 = 1000
        spweight3 = 1000
        spweight4 = 1000
        privatekey = /usr/local/etc/raddb/pkey.pem
        localcert = /usr/local/etc/raddb/localcert.pem
        cacert0 = /usr/local/etc/raddb/cacert_0.pem
        cacert1 = /usr/etc/raddb/cacert_1.pem
        ssllifetime = 300
        persistence = 60000
        maxconnections = 20             # 1 ~ 1000
        retrydelay = 0                  # 0 ~ 10
        retrylimit = 2                  # 0 ~ 100
        timeout = 10000                 # 200 ~ 60000
        deviceip = localhost
        deviceport = 5060
    }

    # This is the used provider configuration section.
    provider used {
        # The OSP servers IP address parameter MUST be configured.
        # The FreeRADIUS OSP module can be configured to report OSP
        # call detail records to up to 4 OSP servers using the spuri1
        # to spuri4 parameters. Each spuriX is the configuration for
        # an OSP server.  A configuration for spuri1 is required.
        # Configuring other OSP servers, using spuri2, ..., spuri4
        # parameters, is optional. The OSP server address should be
        # configured as a standard URL beginning with either http://
        # or https:// followed by the domain name of the OSP server or
        # the IP address. The domain name or IP address should be
        # followed by the peering server TCP port number and uniform
        # resource identifier /osp.
        spuri1 = http://127.0.0.1:1080/osp

        # The deviceip parameter should be configured with the IP
        # address of the server hosting FreeRADIUS.
        deviceip = 127.0.0.1
    }

    #
    # RADIUS OSP mapping parameters
    #

    # This is the default mapping configuration section. Please do
    # not touch it!!!
    default_mapping {
        reportstart = yes
        reportinterim = yes
        reportstop = yes
        ignoreddestinationlist = NULL
        radiusclienttype = 0                    # 0 - undefined, 1 - Acme, 2 - NexTone, 3 - Cisco */
        callorigin = NULL                       # Only for NexTone and Cisco
        ignoreanswer = no                       # Only for NexTone and Cisco
        ignoreoriginate = no                    # Only for NexTone and Cisco
        transactionid = NULL
        callid = %{Acct-Session-Id}
        callingnumberformat = 0                 # 0 - E.164, 1 - URI, 2 - Cisco */
        callingnumber = %{Calling-Station-Id}   # From header
        callednumberformat = 0                  # 0 - E.164, 1 - URI, 2 - Cisco */
        callednumber = %{Called-Station-Id}     # To header
        assertedid = NULL
        sourcedevice = NULL
        source = %{NAS-IP-Address}
        proxy = %{NAS-IP-Address}               # Only for NexTone and Cisco
        destination = NULL
        destinationdevice = NULL
        destinationcount = NULL
        sourcenetworkid = NULL
        destinationnetworkid = NULL
        diversionuser = NULL
        diversionhost = NULL
        timestringformat = 0                    # 0 - time_t, 1 - ctime, 2 - NTP w/o week day, 3 - NTP, 4 - Cisco */
        starttime = %{Acct-Session-Start-Time}
        altertime = NULL
        connecttime = NULL
        endtime = NULL
        duration = %{Acct-Session-Time}
        postdialdelayunit = 0                   # 0 - seconds, 1 - milliseconds */
        postdialdelay = NULL
        releasesource = NULL
        releasecause = %{Acct-Terminate-Cause}
        destinationprotocol = NULL
        inboundsessionid = NULL
        outboundsessionid = NULL
        forwardcodec = NULL
        reversecodec = NULL
        conferenceid = NULL
        reportstatistics = yes
        sendlostpackets = NULL
        sendlostfraction = NULL
        receivelostpackets = NULL
        receivelostfraction = NULL
        rtpdownstreamlostpackets = NULL
        rtpdownstreamlostfraction = NULL
        rtpupstreamlostpackets = NULL
        rtpupstreamlostfraction = NULL
        rtcpdownstreamlostpackets = NULL
        rtcpdownstreamlostfraction = NULL
        rtcpupstreamlostpackets = NULL
        rtcpupstreamlostfraction = NULL
        rtpdownstreamjittersamples = NULL
        rtpdownstreamjitterminimum = NULL
        rtpdownstreamjittermaximum = NULL
        rtpdownstreamjittermean = NULL
        rtpdownstreamjittervariance = NULL
        rtpupstreamjittersamples = NULL
        rtpupstreamjitterminimum = NULL
        rtpupstreamjittermaximum = NULL
        rtpupstreamjittermean = NULL
        rtpupstreamjittervariance = NULL
        rtcpdownstreamjittersamples = NULL
        rtcpdownstreamjitterminimum = NULL
        rtcpdownstreamjittermaximum = NULL
        rtcpdownstreamjittermean = NULL
        rtcpdownstreamjittervariance = NULL
        rtcpupstreamjittersamples = NULL
        rtcpupstreamjitterminimum = NULL
        rtcpupstreamjittermaximum = NULL
        rtcpupstreamjittermean = NULL
        rtcpupstreamjittervariance = NULL
        rtpdownstreamdelaysamples= NULL
        rtpdownstreamdelayminimum = NULL
        rtpdownstreamdelaymaximum = NULL
        rtpdownstreamdelaymean = NULL
        rtpdownstreamdelayvariance = NULL
        rtpupstreamdelaysamples = NULL
        rtpupstreamdelayminimum = NULL
        rtpupstreamdelaymaximum = NULL
        rtpupstreamdelaymean = NULL
        rtpupstreamdelayvariance = NULL
        rtcpdownstreamdelaysamples = NULL
        rtcpdownstreamdelayminimum = NULL
        rtcpdownstreamdelaymaximum = NULL
        rtcpdownstreamdelaymean = NULL
        rtcpdownstreamdelayvariance = NULL
        rtcpupstreamdelaysamples = NULL
        rtcpupstreamdelayminimum = NULL
        rtcpupstreamdelaymaximum = NULL
        rtcpupstreamdelaymean = NULL
        rtcpupstreamdelayvariance = NULL
        rtpoctetscrossover = no                 # Only for Cisco
        rtpdownstreamoctets = NULL
        rtpupstreamoctets = NULL
        rtcpdownstreamoctets = NULL
        rtcpupstreamoctets = NULL
        rtppacketscrossover = no                # Only for Cisco
        rtpdownstreampackets = NULL
        rtpupstreampackets = NULL
        rtcpdownstreampackets = NULL
        rtcpupstreampackets = NULL
        rfactorscaleindex = 4                   # 0 - 0.0001, 1 - 0.001, 2 - 0.01, 3 - 0.1, 4 - 1, 5 - 10, 6 - 100, 7 - 1000, 8 - 10000 */
        rtpdownstreamrfactor = NULL
        rtpupstreamrfactor = NULL
        rtcpdownstreamrfactor = NULL
        rtcpupstreamrfactor = NULL
        mosscaleindex = 4                       # 0 - 0.0001, 1 - 0.001, 2 - 0.01, 3 - 0.1, 4 - 1, 5 - 10, 6 - 100, 7 - 1000, 8 - 10000 */
        rtpdownstreammoscq = NULL
        rtpupstreammoscq = NULL
        rtcpdownstreammoscq = NULL
        rtcpupstreammoscq = NULL
        rtpdownstreammoslq = NULL
        rtpupstreammoslq = NULL
        rtcpdownstreammoslq = NULL
        rtcpupstreammoslq = NULL
        downstreamicpif = NULL
        upstreamicpif = NULL
        custominfo1 = NULL
        custominfo2 = NULL
        custominfo3 = NULL
        custominfo4 = NULL
    }

    #
    # Acme Packet RADIUS mapping to OSP
    #
    # The following section defines mapping of Acme RADIUS accounting
    # records to OSP UsageIndication elements.  If RADIUS records are
    # being collected from an Acme device, the word 'mapping' must be
    # configured before Acme in the first line of this section.
    #
    # For example, the following line is configured to map Acme
    # records.
    #     mapping Acme {
    #
    # The following line is configures the OSP module to NOT map from
    # Acme RADIUS records
    #     Acme {  # This is the Acme mapping configuration section.
    #
    Acme {
        radiusclienttype = 1
        callingnumberformat = 1
        callednumberformat = 1
        callednumber = %{Acme-Primary-Routing-Number}       # Original called number
        # callednumber = %{Acme-Egress-Final-Routing-Number}  # Transaltaed called number
        sourcedevice = %{Acme-Ingress-Remote-Addr}
        destination = %{Acme-Egress-Remote-Addr}
        diversionuser = %{Acme-SIP-Diversion}
        diversionhost = %{Acme-SIP-Diversion}
        timestringformat = 2
        starttime = %{h323-setup-time}
        connecttime = %{h323-connect-time}
        endtime = %{h323-disconnect-time}
        postdialdelayunit = 1
        postdialdelay = %{Acme-Post-Dial-Delay}
        releasesource = %{Acme-Disconnect-Initiator}
        releasecause = %{Acme-SIP-Status}       # SIP
        # releasecause = %{Acme-Disconnect-Cause} # ISDN
        destinationprotocol = %{Acme-Session-Protocol-Type}
        inboundsessionid = %{Acme-Session-Ingress-CallId}
        outboundsessionid = %{Acme-Session-Egress-CallId}
        forwardcodec = %{Acme-FlowType_FS1_F}
        reversecodec = %{Acme-FlowType_FS1_R}
        rtpdownstreamlostpackets = %{Acme-Calling-RTP-Packets-Lost_FS1}
        rtpupstreamlostpackets = %{Acme-Called-RTP-Packets-Lost_FS1}
        rtcpdownstreamlostpackets = %{Acme-Called-RTCP-Packets-Lost_FS1}
        rtcpupstreamlostpackets = %{Acme-Calling-RTCP-Packets-Lost_FS1}
        rtpdownstreamjittermaximum = %{Acme-Calling-RTP-MaxJitter_FS1}
        rtpdownstreamjittermean = %{Acme-Calling-RTP-Avg-Jitter_FS1}
        rtpupstreamjittermaximum = %{Acme-Called-RTP-MaxJitter_FS1}
        rtpupstreamjittermean = %{Acme-Called-RTP-Avg-Jitter_FS1}
        rtcpdownstreamjittermaximum = %{Acme-Called-RTCP-MaxJitter_FS1}
        rtcpdownstreamjittermean = %{Acme-Called-RTCP-Avg-Jitter_FS1}
        rtcpupstreamjittermaximum = %{Acme-Calling-RTCP-MaxJitter_FS1}
        rtcpupstreamjittermean = %{Acme-Calling-RTCP-Avg-Jitter_FS1}
        rtcpdownstreamdelaymaximum = %{Acme-Called-RTCP-MaxLatency_FS1}
        rtcpdownstreamdelaymean = %{Acme-Called-RTCP-Avg-Latency_FS1}
        rtcpupstreamdelaymaximum = %{Acme-Calling-RTCP-MaxLatency_FS1}
        rtcpupstreamdelaymean = %{Acme-Calling-RTCP-Avg-Latency_FS1}
        rtpdownstreamoctets = %{Acme-Calling-Octets_FS1}
        rtpupstreamoctets = %{Acme-Called-Octets_FS1}
        rtpdownstreampackets = %{Acme-Calling-Packets_FS1}
        rtpupstreampackets = %{Acme-Called-Packets_FS1}
        rfactorscaleindex = 2
        rtcpdownstreamrfactor = %{Acme-Called-R-Factor}
        rtcpupstreamrfactor = %{Acme-Calling-R-Factor}
        mosscaleindex = 2
        rtcpdownstreammoscq = %{Acme-Called-MOS}
        rtcpupstreammoscq = %{Acme-Calling-MOS}
        custominfo1 = %{Acme-Custom-VSA-200}
    }

    #
    # NexTone (GenBand) RADIUS mapping to OSP
    #
    # The following section defines mapping of NexTone RADIUS
    # accounting records to OSP UsageIndication elements.  If RADIUS
    # records are being collected from a NexTone device, the word
    # 'mapping' must be configured before NexTone in the first line of
    # this section.
    #
    # For example, the following line is configured to map NexTone
    # records.
    #     mapping NexTone {
    #
    # The following line is configures the OSP module to NOT map from
    # NexTone RADIUS records
    #     NexTone {
    #
    NexTone {
        radiusclienttype = 2
        callorigin = %{h323-call-origin}
        callid = %{h323-incoming-conf-id}
        callednumber = %{gw-rxd-cdn}            # Original called number
        # callednumber = %{gw-final-xlated-cdn}   # Transaltaed called number
        sourcedevice = %{h323-remote-address}
        proxy = %{NAS-IP-Address}
        destination = %{h323-remote-address}
        timestringformat = 3
        starttime = %{h323-setup-time}
        connecttime = %{h323-connect-time}
        endtime = %{h323-disconnect-time}
        releasesource = %{release-source}
        releasecause = %{h323-disconnect-cause}
        destinationprotocol = %{session-protocol}
        inboundsessionid = %{h323-incoming-conf-id}
        outboundsessionid = %{h323-conf-id}
        reportstatistics = no
    }

    #
    # Cisco RADIUS mapping to OSP
    #
    # The following section defines mapping of Cisco RADIUS accounting
    # records to OSP UsageIndication elements.  If RADIUS records are
    # being collected from a Cisco device, the word 'mapping' must
    # be configured before Cisco in the first line of this section.
    #
    # For example, the following line is configured to map Cisco
    # records.
    #     mapping Cisco {
    #
    # The following line is configures the OSP module to NOT map from
    # Cisco RADIUS records
    #     Cisco {
    #
    mapping Cisco {
        reportstart = no
        radiusclienttype = 3
        callorigin = %{h323-call-origin}
        callid = %{call-id}
        callingnumberformat = 2
        callingnumber = %{gw-rxd-cgn}
        callednumberformat = 2
        callednumber = %{gw-rxd-cdn}
        sourcedevice = %{h323-remote-address}
        proxy = %{NAS-IP-Address}
        destination = %{h323-remote-address}
        timestringformat = 4
        starttime = %{h323-setup-time}
        connecttime = %{h323-connect-time}
        endtime = %{h323-disconnect-time}
        releasecause = %{h323-disconnect-cause}
        destinationprotocol = %{session-protocol}
        inboundsessionid = %{call-id}
        outboundsessionid = %{call-id}
        rtpdownstreamlostpackets = %{lost-packets}
        rtpupstreamlostpackets = %{lost-packets}
        rtpdownstreamdelaymean = %{receive-delay}
        rtpupstreamdelaymean = %{receive-delay}
        rtpoctetscrossover = yes
        rtpdownstreamoctets = %{Acct-Input-Octets}
        rtpupstreamoctets = %{Acct-Output-Octets}
        rtppacketscrossover = yes
        rtpdownstreampackets = %{Acct-Input-Packets}
        rtpupstreampackets = %{Acct-Output-Packets}
        downstreamicpif = %{h323-voice-quality}
        upstreamicpif = %{h323-voice-quality}
    }
}

